import * as threeJsHelper from "./threeJsHelpers.js";

//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//instantiate player and world
let playerData = new PlayerClass(
  threeJsHelper.THREE,
  threeJsHelper.loader,
  threeJsHelper.worldRadius,
  0,
  0
);
// console.log("QQQ ", playerData);
//------
//add player to world
threeJsHelper.scene.add(playerData.mesh);
threeJsHelper.scene.add(playerData.wireLine);
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
let cameraRadius = 180;
let cameraLatitude = 12.46; //   degrees north (camera coords in world sphere)
let cameraLongitude = 0; //   degrees east
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------

//-----
const updateWorld = () => {
  cameraLatitude += 0.01;
  threeJsHelper.camera.rotateX(-0.01);
  threeJsHelper.updateWorld(
    playerData,
    cameraRadius,
    cameraLatitude,
    cameraLongitude
  );
  // console.log("QQQ player info ", playerData);
};
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
let intervalId = null;
//---------------------------------
//---------------------------------
//logic for events
document.addEventListener("keydown", (event) => {
  // console.log("QQQ  e ", event);
  //stop looping and generating data ("stops" the program)
  if (event.key === "l") {
    // clearInterval(intervalId);
    window.cancelAnimationFrame(intervalId);
    // release our intervalId from the variable
    intervalId = null;
    console.log("QQQ end of program.");
  }

  // threeJsHelper.testCamRotation(event.key);

  //---------------------
  //---------------------
  //---------------------
  if (event.key === "a") {
    const startPoint = new threeJsHelper.THREE.Vector3(
      playerData.mesh.position.x,
      playerData.mesh.position.y,
      playerData.mesh.position.z
    );
    const angle = -0.3;
    threeJsHelper.worldGroup.rotateOnWorldAxis(startPoint.normalize(), angle);
  }
  if (event.key === "d") {
    const startPoint = new threeJsHelper.THREE.Vector3(
      playerData.mesh.position.x,
      playerData.mesh.position.y,
      playerData.mesh.position.z
    );
    const angle = 0.3;
    threeJsHelper.worldGroup.rotateOnWorldAxis(startPoint.normalize(), angle);
  }
});
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
//----------------------------------------------------
function main() {
  function resizeRendererToDisplaySize(renderer) {
    const canvas = threeJsHelper.renderer.domElement;
    const width = canvas.clientWidth;
    const height = canvas.clientHeight;
    const needResize = canvas.width !== width || canvas.height !== height;
    if (needResize) {
      threeJsHelper.renderer.setSize(width, height, false);
    }

    return needResize;
  }

  //----------------------------------------------------
  //----------------------------------------------------
  //----------------------------------------------------
  //  RENDER LOOP
  function renderLoop() {
    if (resizeRendererToDisplaySize(threeJsHelper.renderer)) {
      const canvas = threeJsHelper.renderer.domElement;
      threeJsHelper.camera.aspect = canvas.clientWidth / canvas.clientHeight;
      threeJsHelper.camera.updateProjectionMatrix();
    }

    //QQQ
    updateWorld();

    //render results on screen
    threeJsHelper.renderer.render(threeJsHelper.scene, threeJsHelper.camera);

    intervalId = requestAnimationFrame(renderLoop);
  }

  intervalId = requestAnimationFrame(renderLoop);
}

main();
